// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id          Int         @id @default(autoincrement())
  nom         String?     @db.VarChar(100)
  email       String      @unique @db.VarChar(255)
  mot_de_passe String     @db.VarChar(255)
  photo_url   String?     @db.VarChar(255)
  annonces    Annonce[]
  messagesEnvoyes Message[] @relation("MessagesEnvoyes")
  messagesRecus  Message[] @relation("MessagesRecus")
  reservations Reservation[]
  reviews      Review[]
}

model Annonce {
  id              Int         @id @default(autoincrement())
  titre           String?     @db.VarChar(255)
  description     String?     
  prix            Decimal?    @db.Decimal(10, 2)
  date_publication DateTime?  
  nombre_chambres Int?       
  ville           String?     @db.VarChar(100)
  disponible      Boolean?   
  date_disponible DateTime?  
  utilisateur_id  Int        
  utilisateur     Utilisateur @relation(fields: [utilisateur_id], references: [id])
  photo_url       String?     @db.VarChar(255)
  reservations    Reservation[]
  reviews         Review[]
}

model Message {
  id            Int         @id @default(autoincrement())
  expediteur_id Int
  destinataire_id Int
  contenu       String?     
  date_envoi    DateTime?   

  expediteur    Utilisateur @relation("MessagesEnvoyes", fields: [expediteur_id], references: [id])
  destinataire  Utilisateur @relation("MessagesRecus", fields: [destinataire_id], references: [id])
}

model Reservation {
  id             Int         @id @default(autoincrement())
  utilisateur_id Int
  annonce_id     Int
  date_reservation DateTime? 
  statut         String?     @db.VarChar(50)

  utilisateur    Utilisateur @relation(fields: [utilisateur_id], references: [id])
  annonce        Annonce     @relation(fields: [annonce_id], references: [id])
}

model Review {
  id            Int         @id @default(autoincrement())
  utilisateur_id Int
  annonce_id     Int
  note          Int?
  commentaire   String?     

  utilisateur   Utilisateur @relation(fields: [utilisateur_id], references: [id])
  annonce       Annonce     @relation(fields: [annonce_id], references: [id])
}
